<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>
<nav class="navbar navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">SLH - Laboratoire 2</a>
        <div>
            <a href="/login" class="btn btn-outline-primary">Login</a>
        </div>
    </div>
</nav>

<div class="container mt-5">
    {{#if success_message}}
        <div class="alert alert-success text-center">
            {{success_message}}
        </div>
    {{/if}}

    {{#if error_message}}
        <div class="alert alert-danger text-center">
            {{error_message}}
        </div>
    {{/if}}

    <h3 class="text-center">Register</h3>
    <form id="register_form" class="mx-auto" style="max-width: 400px;">
        <div class="mb-3">
            <label for="first_name" class="form-label">First Name</label>
            <input type="text" class="form-control form-control-sm" id="first_name" placeholder="Enter your first name" autocomplete="off" required>
        </div>
        <div class="mb-3">
            <label for="last_name" class="form-label">Last Name</label>
            <input type="text" class="form-control form-control-sm" id="last_name" placeholder="Enter your last name" autocomplete="off" required>
        </div>
        <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" class="form-control form-control-sm" id="email" placeholder="Enter your email" autocomplete="off" required>
        </div>
        <button type="button" class="btn btn-primary btn-sm w-100" onclick="startRegistration()">Register</button>
    </form>
    <div id="registration_status" class="mt-3"></div>
</div>

<script>
    const urlParams = new URLSearchParams(window.location.search);
    const email = urlParams.get('email');
    const resetMode = urlParams.get('reset_mode') === 'true';

    if (email) {
        document.getElementById('email').value = email;
        document.getElementById('email').readOnly = true;
    }

    async function startRegistration() {
        const email = document.getElementById('email').value;
        const firstName = document.getElementById('first_name').value;
        const lastName = document.getElementById('last_name').value;

        try {
            const response = await fetch('/register', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ email, reset_mode: resetMode })
            });

            if (!response.ok) {
                throw new Error(await response.text());
            }

            const data = await response.json();
            const publicKeyOptions = data.publicKey;

            publicKeyOptions.user.id = Uint8Array.from(publicKeyOptions.user.id);
            publicKeyOptions.challenge = Uint8Array.from(
                    atob(publicKeyOptions.challenge.replace(/-/g, '+').replace(/_/g, '/'))
                            .split('').map(c => c.charCodeAt(0))
            );

            const credential = await navigator.credentials.create({ publicKey: publicKeyOptions });

            const credentialJson = {
                id: credential.id,
                rawId: Array.from(new Uint8Array(credential.rawId)),
                response: {
                    clientDataJSON: Array.from(new Uint8Array(credential.response.clientDataJSON)),
                    attestationObject: Array.from(new Uint8Array(credential.response.attestationObject)),
                },
                type: credential.type,
            };

            const completeResponse = await fetch('/register/complete', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    email,
                    first_name: firstName,
                    last_name: lastName,
                    response: credentialJson,
                    state_id: data.state_id,
                    reset_mode: resetMode
                })
            });

            if (completeResponse.ok) {
                document.getElementById('registration_status').textContent = "Registration successful! You can now log in.";
                document.getElementById('registration_status').classList.add("alert", "alert-success");
            } else {
                throw new Error(await completeResponse.text());
            }
        } catch (error) {
            alert("Registration failed: " + error.message);
        }
    }
</script>

</body>
</html>
