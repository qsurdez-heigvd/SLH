<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        .post-image {
            width: 150px; /* Largeur fixe */
            height: 150px; /* Hauteur fixe */
            object-fit: cover; /* Découpe pour s’adapter */
            cursor: pointer;
        }
        .full-image-modal img {
            max-width: 100%;
            max-height: 100%;
        }
    </style>
</head>
<body>
<nav class="navbar navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="/home">SLH - Laboratoire 2</a>
        <div>
            <a href="/logout" class="btn btn-outline-danger">Logout</a>
        </div>
    </div>
</nav>

<div class="container mt-3">
    <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#createPostModal">Create a Post</button>

    <div id="posts_list">
        {{#each posts}}
            <div class="card mb-3">
                <div class="card-body">
                    <p>{{content}}</p>
                    {{#if image_path}}
                        <img src="{{image_path}}" alt="Post image" class="post-image" data-bs-toggle="modal" data-bs-target="#imageModal" data-src="{{image_path}}">
                    {{/if}}
                    <button class="btn btn-success" onclick="likePost('{{id}}', 'like', this)">Like</button>
                    <button class="btn btn-danger" onclick="likePost('{{id}}', 'dislike', this)">Dislike</button>
                    <span>Likes: <span id="likes-{{id}}">{{likes}}</span></span>
                </div>
            </div>
        {{/each}}
    </div>
</div>

<!-- Create Post Modal -->
<div class="modal fade" id="createPostModal" tabindex="-1" aria-labelledby="createPostModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createPostModalLabel">Create a New Post</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="create_post_form" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label for="text" class="form-label">Text</label>
                        <textarea id="text" class="form-control" maxlength="250" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="file" class="form-label">Image (optional)</label>
                        <input type="file" id="file" class="form-control">
                        <div id="image-preview" style="display: none; position: relative;">
                            <img id="preview-img" src="" alt="Preview" style="max-width: 100%; max-height: 200px;">
                            <button type="button" id="remove-image" class="btn btn-danger btn-sm" style="position: absolute; top: 5px; right: 5px;">✖</button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="submitPost()">Publish</button>
            </div>
        </div>
    </div>
</div>

<!-- Full Image Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center full-image-modal">
                <img src="" alt="Full image">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    const fileInput = document.getElementById("file");
    const imagePreview = document.getElementById("image-preview");
    const previewImg = document.getElementById("preview-img");
    const removeImageButton = document.getElementById("remove-image");

    fileInput.addEventListener("change", (event) => {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = (e) => {
                previewImg.src = e.target.result;
                imagePreview.style.display = "block";
            };
            reader.readAsDataURL(file);
        }
    });

    removeImageButton.addEventListener("click", () => {
        fileInput.value = ""; // Clear the file input
        imagePreview.style.display = "none";
    });

    document.getElementById("posts_list").addEventListener("click", function (event) {
        if (event.target.classList.contains("post-image")) {
            const fullImageSrc = event.target.getAttribute("data-src");
            document.querySelector("#imageModal img").src = fullImageSrc;
        }
    });

    async function submitPost() {
        const formData = new FormData();
        formData.append("text", document.getElementById("text").value);
        const fileInput = document.getElementById("file");
        if (fileInput.files.length > 0) {
            formData.append("file", fileInput.files[0]);
        }

        try {
            const response = await fetch("/post/create", {
                method: "POST",
                body: formData,
            });

            if (response.ok) {
                location.reload();
            } else {
                const errorText = await response.text();
                alert("Failed to create post: " + errorText);
            }
        } catch (error) {
            alert("An error occurred: " + error.message);
        }
    }

    async function likePost(postId, action) {
        try {
            const response = await fetch("/post/like", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ post_id: postId, action }),
            });

            if (response.ok) {
                const likesElement = document.getElementById(`likes-${postId}`);
                const currentLikes = parseInt(likesElement.textContent, 10);

                if (action === "like") {
                    if (currentLikes === 1) {
                        likesElement.textContent = 0; // Remove like
                    } else {
                        likesElement.textContent = 1; // Set like
                    }
                } else if (action === "dislike") {
                    if (currentLikes === -1) {
                        likesElement.textContent = 0; // Remove dislike
                    } else {
                        likesElement.textContent = -1; // Set dislike
                    }
                }
            } else {
                const errorText = await response.text();
                alert("Failed to update like/dislike: " + errorText);
            }
        } catch (error) {
            alert("An error occurred: " + error.message);
        }
    }
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
